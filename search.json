[
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "weeks/week-1.html",
    "href": "weeks/week-1.html",
    "title": "Week 1: Markup Languages",
    "section": "",
    "text": "Important\n\n\n\nThis week’s slides can be found here"
  },
  {
    "objectID": "weeks/week-1.html#installing-a-tex-framework",
    "href": "weeks/week-1.html#installing-a-tex-framework",
    "title": "Week 1: Markup Languages",
    "section": "Installing a TeX framework",
    "text": "Installing a TeX framework\nIf you are on Windows or Linux, I suggest you install the easy to install ProTeXt distribution or the TexLive distribution. If you are on a Mac, the MacTex distribution will give you everything you need. If you use the default installation parameters, everything you might ever need is included in these distributions. Both distributions come with an excellent (but basic) editor (Texworks in Texlive and TexShop in MacTex), but if you want to go the fancy way: there are very good alternatives. See this page for a comprehensive overview of all TeX editors and code editors with TeX capabilities.\nAlternatively, you can use the online TeX editor Overleaf. Please pay attention to any data privacy regulations. It may not be an option for all your research endeavors."
  },
  {
    "objectID": "weeks/week-1.html#handing-in-the-exercise",
    "href": "weeks/week-1.html#handing-in-the-exercise",
    "title": "Week 1: Markup Languages",
    "section": "Handing in the exercise",
    "text": "Handing in the exercise\nCreate a zipped archive of your all necessary (e.g. .bib .tex and .pdf files and upload it to the correct folder (Wk1) via Add File &gt; Upload Files in the course collaboration repository. Name the file yourname.zip.\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-3.html",
    "href": "weeks/week-3.html",
    "title": "Week 3: Version Control",
    "section": "",
    "text": "Lecture Week 3\n\n\n\nThis week has no lecture. We discussed the flow of development with Git in class."
  },
  {
    "objectID": "weeks/week-3.html#git",
    "href": "weeks/week-3.html#git",
    "title": "Week 3: Version Control",
    "section": "Git",
    "text": "Git\nGit is a free and open source version control system for text files. It can handle extensive change logging for you, no matter the size of the project. Git is fast and efficient, but its effectiveness depends also on the frequency you instruct it to log your project’s changes.\nYou can see Git as a blank canvas that starts at a certain point in time. Every time you (or others) instruct Git to log any changes that have been made, Git adds the changes that are made to this canvas. We call the changes to the canvas commits. With every commit an extensive log is created that includes at least the following information:\n\nthe changes made\nwho made the changes\nmetadata\na small piece of text that describe the changes made\n\nThe difference between two commits - or the changes between them - are called diffs.\nIf you’d like to know much more about Git, this online book is a very good resource. If you’d like to practice with the command line interface use this webpage for a quick course. This book covers pretty much everything you need to marry Git and R."
  },
  {
    "objectID": "weeks/week-3.html#github",
    "href": "weeks/week-3.html#github",
    "title": "Week 3: Version Control",
    "section": "GitHub",
    "text": "GitHub\nGitHub is the social and user interface to Git that allows you to work in repositories. These repositories can be seen as project folders in which you publish your work, but you can also use them as test sites for development, testing, etcetera. There is a distinction between private repositories (only for you and those you grant access) and public repositories (visible for everyone).\nYour public repositories can be viewed and forked by everyone. Forking is when other people create a copy of your repository on their own account. This allows them to work on a repository without affecting the master. You can also do this yourself, but then the process is called branching instead of forking. If you create a copy of a repository that is offline, the process is called cloning.\nGitHub’s ability to branch, fork and clone is very useful as it allows other people and yourself to experiment on (the code in) a repository before any definitive changes are merged with the master. If you’re working in a forked repository, you can submit a pull request to the repository collaborators to accept (or reject) any suggested changes.\nFor now, this may be confusing, but I hope you recognize the benefits GitHub can have on the process of development and bug-fixing. For example, the most up-to-date version of the mice package in R can be directly installed from the mice repository with the following code:\n\ninstall.packages(\"devtools\")\ndevtools::install_github(repo = \"stefvanbuuren/mice\")\n\nYou can see that this process requires package devtools that expands the R functionality with essential development tools. Loading packages in R directly from their respective GitHub repositories, allows you to obtain the latest - often improved and less buggy - iteration of that software even before it is published on CRAN."
  },
  {
    "objectID": "weeks/week-3.html#installing-git",
    "href": "weeks/week-3.html#installing-git",
    "title": "Week 3: Version Control",
    "section": "Installing Git",
    "text": "Installing Git\n\nInstalling on Mac\nI suggest you install Git by downloading and installing GitHub Desktop. GitHub’s desktop application is a nice GUI and, naturally, integrates well into the repository workflow on GitHub.\nWhen installed, you can go to GitHub Desktop &gt; Install Command Line Tool\nAfter a reboot, all should be set.\n\n\nInstalling on Windows\nDownload and install Git for Windows, Then download and install GitHub Desktop. GitHub’s desktop application is a nice GUI and, naturally, integrates well into the repository workflow on GitHub.\nAfter a reboot, all should be set."
  },
  {
    "objectID": "weeks/week-3.html#command-line-interface-vs.-gui",
    "href": "weeks/week-3.html#command-line-interface-vs.-gui",
    "title": "Week 3: Version Control",
    "section": "Command line interface vs. GUI",
    "text": "Command line interface vs. GUI\nUltimately, you’ll want to learn how to use Git through the command line interface (CLI). It offers better and more comprehensive functionality. Again, take this 15-minute course to get a gentle introduction. But do not be afraid that you miss out on the CLI if you don’t study this link: In week 4 we’ll explore in detail how to handle Git when things go haywire. You’ll be a CLI-wizard by then."
  },
  {
    "objectID": "weeks/week-3.html#gitignore",
    "href": "weeks/week-3.html#gitignore",
    "title": "Week 3: Version Control",
    "section": ".gitignore",
    "text": ".gitignore\nGitHub sees every file in your repository as one of the following three\n\ntracked files that have been (previously) staged and committed\nuntracked files that have not been staged or committed\nignored files that have been explicitly ignored\n\nIt may be wise to instruct Git to ignore changes in some files. For example, compiled files (think about .com, .exe, .o, .so, etc), archives (e.g. .zip, .tar, .rar), logs (.log) and files generated in runtime (.temp) do not have to be tracked by Git. The same holds for hidden system files (e.g. .DS_Store or Thumbs.db). Adding such filetypes to a file named .gitignore and placing that file in the root of your repository will take care of focusing Git’s energy on useful files only. For common .gitignore examples, see this repository. There are many examples inside, such as this .gitignore example for R"
  },
  {
    "objectID": "weeks/week-3.html#linking-github-and-rstudio",
    "href": "weeks/week-3.html#linking-github-and-rstudio",
    "title": "Week 3: Version Control",
    "section": "Linking GitHub and RStudio",
    "text": "Linking GitHub and RStudio\nSecurely linking your local machine to the remote repository is vital when collaborating with other people. In short; you would not want a potential hacker to have contributor access to any of your projects. I have prepared this walkthrough video that details the process of linking GitHub to your machine and RStudio. Below I explain the rationale of using both an SSH key and a personal access token.\nIf you still experience problems after following my walkthrough, check this chapter\nTo learn more about maintaining a package as GitHub repository within RStudio, have a look at this guide by Hadley Wickham."
  },
  {
    "objectID": "weeks/week-3.html#ssh-keys",
    "href": "weeks/week-3.html#ssh-keys",
    "title": "Week 3: Version Control",
    "section": "SSH keys",
    "text": "SSH keys\nWith an SSH key you can identify yourself to an online server (in this case the GitHub server) without having to log in every time. It is like your machine having access to an online server through a unique biometric security measure, but instead of biometric data a bits-and-bytes hash code is communicated every time. You can use an SSH key to link RStudio to your GitHub repository, but it is better to use a personal access token for this. See below."
  },
  {
    "objectID": "weeks/week-3.html#personal-access-tokens",
    "href": "weeks/week-3.html#personal-access-tokens",
    "title": "Week 3: Version Control",
    "section": "Personal access tokens",
    "text": "Personal access tokens\nIf you use GitHub’s 2FA functionality - you should! - your username and password are not sufficient to push commits to GitHub through RStudio. To solve this follow these steps on github.com like I detail in this walkthrough video:\n\nLog in to your account\nClick on your profile photo (upper right corner) and select Settings\nGo to Developer settings\nSelect Personal access tokens in the left sidebar. The classic token as it is now called is sufficient\nClick Generate new token\nGive the token a name\nSelect at least the repo scope; you’ll need these permissions to access repositories. Also choose a relevant expiration: the longer the better, the shorter the safer. Remember that you can always generate a new token if you need to.\nClick Generate token\n\nCopy the token. The token will not be displayed again, so copy-paste it directly where it is needed. Remember that you can always generate a new token if you need to.\nIn RStudio, paste the generated token in the password field when RStudio asks for your credentials. The token will now serve as the unique authenticated link instead of your password."
  },
  {
    "objectID": "weeks/week-3.html#git-exercise",
    "href": "weeks/week-3.html#git-exercise",
    "title": "Week 3: Version Control",
    "section": "Git exercise",
    "text": "Git exercise\n\nFork this year’s course repository. See also this walkthrough video I’ve made for you that details the next couple of steps, but then on a previous Markup Languages iteration’s repository (markup2020).\nClone the fork to your machine\nCreate a new branch\nAdd your output for the exercises from previous weeks to a folder with your name to the repository.\nCommit the changes\nPush to your GitHub fork\nSend a pull request to incorporate your changes into the upstream/master branch (i.e. gerkovink/markup2023). I have made another walkthrough video for you that details this step - but then on the markup2020 repository.\n\n\n\n\n\n\n\n\nMonte Carlo simulation exercise (no need to hand in)\n\n\n\n\nPerform a small simulation that does the following:\n\n\n\nSample 100 samples from a standard normal distribution.\nFor each of these samples, calculate the following statistics for the mean:\n\n\nabsolute bias\nstandard error\nlower bound of the 95% confidence interval\nupper bound of the 95% confidence interval\n\n\nCreate a plot that demonstrates the following:\n\n“A replication of the procedure that generates a 95% confidence interval that is centered around the sample mean would cover the population value at least 95 out of 100 times” (Neyman, 1934)\n\nPresent a table containing all simulated samples for which the resulting confidence interval does not contain the population value.\n\n\n\n\n\n\n\n\n\nMy solutions to the exercises\n\n\n\n\n\n\nMy old solution to the MC exercise\nMy solution to the MC exercise as I would do it now"
  },
  {
    "objectID": "weeks/week-3.html#disclaimer",
    "href": "weeks/week-3.html#disclaimer",
    "title": "Week 3: Version Control",
    "section": "Disclaimer",
    "text": "Disclaimer\nI’ll take you by the hand through the exercise. So if you follow this manual step by step, you’ll be done at the end and you will have a good notion of troubleshooting with Git [or a reference thereof].\nThis exercise is a summary of important commands. A full and comprehensive overview can be found in the pro Git book.\nO, and we forgot to tell you: you’ll need the terminal for this exercise. You may use the one in RStudio, or the dedicated terminal on UNIX systems or the command prompt or Windows Terminal on Windows."
  },
  {
    "objectID": "weeks/week-3.html#prepare",
    "href": "weeks/week-3.html#prepare",
    "title": "Week 3: Version Control",
    "section": "Prepare",
    "text": "Prepare\nBefore we continue it is good to all start from the point of departure.\n\nUse the terminal to navigate to the Git repository (the location of the git repo on your HDD)\nType git pull to make sure that you obtain the latest state from the remote on GitHub\n\n\n% git pull\nAlready up to date.\n\nDon’t type the %; that is just the command prompt indicator on my machine. Yours may be different, such as &gt; or $. We see that Git reminds me that I already have the latest state. I am up to date.\n\nChange the branch to the Exercise_wk4 branch.\n\n\n% git checkout Exercise_wk4\nSwitched to branch 'Exercise_wk4'\nYour branch is up to date with 'origin/Exercise_wk4'.\n\nI’ve now been switched to the Exercise_wk4 branch. It is up to date with origin/Exercise_wk4, meaning that GitHub and my local copy are in sync. origin is a shorthand name for the remote repository that a project was originally cloned from. It is useful that origin is referenced instead of the original repo’s URL –&gt; This makes referencing much more convenient."
  },
  {
    "objectID": "weeks/week-3.html#inspect-the-current-state",
    "href": "weeks/week-3.html#inspect-the-current-state",
    "title": "Week 3: Version Control",
    "section": "Inspect the current state",
    "text": "Inspect the current state\nMake sure you are in the Exercise_wk4 branch. Then Use git log --graph to inspect the current Git branch and its commits.\n\n% git log --graph          \n*   commit 176137b1667cc6903f7a9eead5723892ef1a77a7 (HEAD -&gt; master, origin/master, origin/HEAD)\n|\\  Merge: 0e67723 c902093\n| | Author: Gerko Vink &lt;g.vink@uu.nl&gt;\n| | Date:   Thu Oct 29 12:44:01 2020 +0100\n| | \n| |     Merge pull request #38 from thomasjwise/wisedev\n| |     \n| |     Assignment 3 - Beamer PDF\n| |     \n| |     Well done ✅\n| | \n| * commit c9020931678d90d91cfe21778e6ce5b4943e46cb\n| | Author: Thomas Wise &lt;48682160+thomasjwise@users.noreply.github.com&gt;\n| | Date:   Wed Oct 28 13:59:23 2020 +0100\n| | \n| |     Assignment 3 - Beamer PDF\n| |   \n* |   commit 0e67723572744b769389f5b8883c9f1aa6a3b7dd\n|\\ \\  Merge: 4134b75 1f488c6\n| | | Author: Gerko Vink &lt;g.vink@uu.nl&gt;\n| | | Date:   Thu Oct 29 11:27:16 2020 +0100\n| | | \n\nWe see information about the history that brought us to this point in time. We see commit messages, the author, the dates, the SHA-1 hash and the graph tree. We asked for the graph tree with --graph.\nYou can scroll up and down the graph. To exit the graph window, type q. For help, type h. To obtain a more condensed graph, use\n\n% git log --oneline --graph\n*   176137b (HEAD -&gt; Exercise_wk4, origin/master, origin/HEAD, origin/Exercise_wk4, master) Merge pull request #38 from thomasjwise/wisedev\n|\\  \n| * c902093 Assignment 3 - Beamer PDF\n* |   0e67723 Merge pull request #39 from gerkovink/SofieIssue\n|\\ \\  \n| * | 1f488c6 (SofieIssue) remove pipe operator\n| * | 4ead406 update readme.md\n|/ /  \n* |   4134b75 Merge pull request #37 from pietjonker/piet\n|\\ \\  \n| * | f50014b commit assignment 2\n| * | 5ae2b9b Assignment 1 and 2\n* | |   f277a35 Merge pull request #35 from zoedunias/zoedev\n|\\ \\ \\  \n| * | | 1c9aad6 Added Exercise 2\n* | | |   43fb1ed Merge pull request #34 from RianneKraakman/riannedev\n|\\ \\ \\ \\  \n| * | | | 75d9293 Add assignment 2\n* | | | |   d3df110 Merge pull request #33 from gerkovink/gerkodev\n|\\ \\ \\ \\ \\  \n| * \\ \\ \\ \\   34954f8 (origin/gerkodev, gerkodev) Merge pull request #22 from Goorbergh/ruben_assignment_1\n\nThis graph view is much more condensed. The nice thing about this view is the direct depiction of each action’s abbreviated SHA-1 key.\nWe can use the SHA-1 keys to instruct Git. For example, to obtain the history on commit c902093, we only need to refer the SHA-1 hash.\n\n% git log c902093          \ncommit c9020931678d90d91cfe21778e6ce5b4943e46cb\nAuthor: Thomas Wise &lt;48682160+thomasjwise@users.noreply.github.com&gt;\nDate:   Wed Oct 28 13:59:23 2020 +0100\n\n    Assignment 3 - Beamer PDF\n\ncommit db649539738bb30b63d93053b67891ef6c55037e\nAuthor: Thomas Wise &lt;48682160+thomasjwise@users.noreply.github.com&gt;\nDate:   Wed Sep 16 14:04:21 2020 +0200\n\n    Assignment 1\n\ncommit 21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3\nMerge: 7f0806b f4a11cb\nAuthor: Gerko Vink &lt;g.vink@uu.nl&gt;\nDate:   Tue Sep 15 20:15:25 2020 +0200\n\n    Merge pull request #2 from gerkovink/gerkodev\n    \n    This image is too large\n\ncommit f4a11cbed729bc8454c01866aab4291b3b580d6f\nAuthor: Gerko Vink &lt;g.vink@uu.nl&gt;\n\nOr, a more condensed version of the same\n\n% git log c902093 --pretty=oneline\nc9020931678d90d91cfe21778e6ce5b4943e46cb Assignment 3 - Beamer PDF\ndb649539738bb30b63d93053b67891ef6c55037e Assignment 1\n21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 Merge pull request #2 from gerkovink/gerkodev\nf4a11cbed729bc8454c01866aab4291b3b580d6f resize image\n7f0806b68387d4f3c8af5c1f27d94b69e90a2d13 Merge pull request #1 from gerkovink/gerkodev\na36ed81b3831e6084c2adf661dc4cfb32c4cb5f7 add childhood memory\n9ba9c43437a7f00f5095df55db0c07d7233ad152 Add CV\n9bf1c32ea55b60bce613d65765c18deb522772ff Update .gitignore\n18761716665262f19296fb5d8e7c1720c8cea58a Merge branch 'master' of https://github.com/gerkovink/markup2020\n1ee60aa26142b5f175928d409614b8de84c1ef79 Update .gitignore\n7c3d816264b5629e7bfe112954178648d94a37b4 Delete markup_sticker_SMALL.psd\n37c356ca51b4ed03e96570934f28caf5fcfd75d8 Delete .DS_Store\nd56dd90172d1106117d53102e5053165bc182020 Update .gitignore\ne7b78b592a8000d3a647de3a265c69496adebfe5 Update .gitignore\nfdd923ad2b522d6e4357229ea801d23ec5b16717 update readme\n7e14559d7f7e8676d557c9b73fc43fb3a66a0c3c added sticker\n493609efa7ce659ebebf5a0d0300f23788397e68 Initial commit\n\nPlease note that we only reference the short hash. There is no need to reference the longer hash as long as the sequence of the shorter reference is unique.\nFrom this --pretty=oneline view it is now easy to spot the origin of our course repository - the initial commit that initiated the Git goodness. You can also see that I updated the .gitignore, a hidden file that specifies which files and directories to be ignored by Git. And I did some cosmetic changes and file deletions. This is very insightfull because of the detailed, but consice commit messages."
  },
  {
    "objectID": "weeks/week-3.html#checkout-an-old-state",
    "href": "weeks/week-3.html#checkout-an-old-state",
    "title": "Week 3: Version Control",
    "section": "Checkout an old state",
    "text": "Checkout an old state\nGo back in time to 21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 Merge pull request #2 from gerkovink/gerkodev.\nTo do so, we only need to refer the start of the SHA-1 key.\n\n% git checkout 21a3b5a\nNote: switching to '21a3b5a'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c &lt;new-branch-name&gt;\n\nOr undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at 21a3b5a Merge pull request #2 from gerkovink/gerkodev\n\nWe are now at the old state. So we went back in time. The current state where we are is independent from all later commits, but is built exactly on all preceding commits as per the tree.\nThere are a couple of terms that are new:\n\nHEAD: The HEAD in Git is the pointer to the current branch reference. It is the last commit you have made or checked out [in our case]. REMEMBER that the head will always serve as the parent to the next commit\ndetached HEAD: The same as the head, but now the pointer references a specific commit and not a branch.\n\n\n\nThe problem with a detached HEAD\nThis webpage illustrates the dangers of committing changes under a detached head quite nicely:\n\nThe HEAD pointer in Git determines your current working revision (and thereby the files that are placed in your project’s working directory). Normally, when checking out a proper branch name, Git automatically moves the HEAD pointer along when you create a new commit. You are automatically on the newest commit of the chosen branch.  When you instead choose to check out a commit hash, Git won’t do this for you. The consequence is that when you make changes and commit them, these changes do NOT belong to any branch. This means they can easily get lost once you check out a different revision or branch: not being recorded in the context of a branch, you lack the possibility to access that state easily (unless you have a brilliant memory and can remember the commit hash of that new commit…).\n\nThe useful thing about going to an old commit is that you can take this state as a point of departure. Just beware of the pitfalls of working under a detached HEAD.\n\n\n\nleave the detached HEAD\nGo back to the branch HEAD\n\n% git switch -                    \nPrevious HEAD position was 21a3b5a Merge pull request #2 from gerkovink/gerkodev\nSwitched to branch 'Exercise_wk4'\nYour branch is up to date with 'origin/Exercise_wk4'."
  },
  {
    "objectID": "weeks/week-3.html#make-a-new-branch-of-the-old-state",
    "href": "weeks/week-3.html#make-a-new-branch-of-the-old-state",
    "title": "Week 3: Version Control",
    "section": "Make a new branch of the old state",
    "text": "Make a new branch of the old state\nLet’s take that old state and make it into a proper point of departure for new things. Again, reference 21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 Merge pull request #2 from gerkovink/gerkodev, but now we make the state of 21a3b5a into a new branch. We call that branch Wk4_markup:\n\n% git checkout -b Wk4_markup 21a3b5a \nSwitched to a new branch 'Wk4_markup'\n\nWe now have checked out an old state and made it into a new branch. The cool thing is that we can now commit all we want and everything will be properly logged. Just remember that if you’d like to go back in time and play around with an old state of your project –&gt; Merge the old state into a new branch like I demonstrated above."
  },
  {
    "objectID": "weeks/week-3.html#add-a-new-commit",
    "href": "weeks/week-3.html#add-a-new-commit",
    "title": "Week 3: Version Control",
    "section": "Add a new commit",
    "text": "Add a new commit\nWe start by creating an empty text file\n\n% touch add_text_file.txt\n\nIf the touch command does not work on your machine, you may also create this file by hand.\nNow, if we would like to commit the addition of this file to our repo, we get the following:\n\n% git commit -a -m 'add text file'\nOn branch Wk4_markup\nUntracked files:\n    add_text_file.txt\n\nnothing added to commit but untracked files present\n\nThe commit was not succesfull, because the file add_text_file.txt is not yet tracked. Note that I use -a to specify to commit all changed files and folders that are tracked. I use -m to indicate that I would like to add the message add text file.\nYou see that using a GUI to Git like GitHub desktop or RStudio is quite convenient if you would not like to indicate which files to track. It is also less flexible.\n\n\nAdd files to tracking\nTo track all untracked files and folders\n\ngit add -A\n\n\n\n\ncommit with a message\nNow if we revisit the commit command\n\n% git commit -a -m 'add text file'\n[Wk4_markup 8d30c46] add text file\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 add_text_file.txt"
  },
  {
    "objectID": "weeks/week-3.html#study-the-log-again",
    "href": "weeks/week-3.html#study-the-log-again",
    "title": "Week 3: Version Control",
    "section": "Study the log again",
    "text": "Study the log again\n\n% git log --pretty=oneline\n8d30c4698b9761d650de2f5288389257762753ce (HEAD -&gt; Wk4_markup) add text file\n21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 (old-state) Merge pull request #2 from gerkovink/gerkodev\nf4a11cbed729bc8454c01866aab4291b3b580d6f resize image\n7f0806b68387d4f3c8af5c1f27d94b69e90a2d13 Merge pull request #1 from gerkovink/gerkodev\na36ed81b3831e6084c2adf661dc4cfb32c4cb5f7 add childhood memory\n9ba9c43437a7f00f5095df55db0c07d7233ad152 Add CV\n9bf1c32ea55b60bce613d65765c18deb522772ff Update .gitignore\n18761716665262f19296fb5d8e7c1720c8cea58a Merge branch 'master' of https://github.com/gerkovink/markup2020\n1ee60aa26142b5f175928d409614b8de84c1ef79 Update .gitignore\n7c3d816264b5629e7bfe112954178648d94a37b4 Delete markup_sticker_SMALL.psd\n37c356ca51b4ed03e96570934f28caf5fcfd75d8 Delete .DS_Store\nd56dd90172d1106117d53102e5053165bc182020 Update .gitignore\ne7b78b592a8000d3a647de3a265c69496adebfe5 Update .gitignore\nfdd923ad2b522d6e4357229ea801d23ec5b16717 update readme\n7e14559d7f7e8676d557c9b73fc43fb3a66a0c3c added sticker\n493609efa7ce659ebebf5a0d0300f23788397e68 Initial commit\n\nWe can see that the HEAD is now at the latest commit and that this commit comes after the old-state from which we created the branch.\n\n\nNow add another empty text file.\n\n% touch add_another_text_file.txt\n\nLet’s say that we rather would have included this file in the previous commit, we can achieve this by\n\n% git add -A\n% git commit --amend -m \"add two text files\"\n[Wk4_markup 9e6c38c] add two text files\n Date: Tue Nov 3 23:09:11 2020 +0100\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 add_text_file.txt\n\nWe have effectively ammended the previous commit. We’ve also changed the commit message into add two text files:\n\n% git log --pretty=oneline\n9e6c38c2288f7e7fce75de3bd1ffb522de112a8b (HEAD -&gt; Wk4_markup) add two text files\n21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 (old-state) Merge pull request #2 from gerkovink/gerkodev\nf4a11cbed729bc8454c01866aab4291b3b580d6f resize image\n7f0806b68387d4f3c8af5c1f27d94b69e90a2d13 Merge pull request #1 from gerkovink/gerkodev\na36ed81b3831e6084c2adf661dc4cfb32c4cb5f7 add childhood memory\n9ba9c43437a7f00f5095df55db0c07d7233ad152 Add CV\n9bf1c32ea55b60bce613d65765c18deb522772ff Update .gitignore\n18761716665262f19296fb5d8e7c1720c8cea58a Merge branch 'master' of https://github.com/gerkovink/markup2020\n1ee60aa26142b5f175928d409614b8de84c1ef79 Update .gitignore\n7c3d816264b5629e7bfe112954178648d94a37b4 Delete markup_sticker_SMALL.psd\n37c356ca51b4ed03e96570934f28caf5fcfd75d8 Delete .DS_Store\nd56dd90172d1106117d53102e5053165bc182020 Update .gitignore\ne7b78b592a8000d3a647de3a265c69496adebfe5 Update .gitignore\nfdd923ad2b522d6e4357229ea801d23ec5b16717 update readme\n7e14559d7f7e8676d557c9b73fc43fb3a66a0c3c added sticker\n493609efa7ce659ebebf5a0d0300f23788397e68 Initial commit"
  },
  {
    "objectID": "weeks/week-3.html#undo-a-commit",
    "href": "weeks/week-3.html#undo-a-commit",
    "title": "Week 3: Version Control",
    "section": "Undo a commit",
    "text": "Undo a commit\nWhen shit hits the fan, we can always undo a commit. For example, the following command reverts all changes to the inital commit\n\n% git reset --hard 493609e  \nHEAD is now at 493609e Initial commit\n\nWe are now back at the first commit in the project."
  },
  {
    "objectID": "weeks/week-3.html#undo-undoing-a-commit",
    "href": "weeks/week-3.html#undo-undoing-a-commit",
    "title": "Week 3: Version Control",
    "section": "Undo undoing a commit",
    "text": "Undo undoing a commit\nTo properly do this without making mistakes, it is best to study the history of the HEAD\n\n% git reflog                \n493609e (HEAD -&gt; Wk4_markup) HEAD@{0}: reset: moving to 493609e\n9e6c38c HEAD@{1}: commit (amend): add two text files\n8d30c46 HEAD@{2}: commit: add text file\n21a3b5a (old-state) HEAD@{3}: checkout: moving from Exercise_wk4 to Wk4_markup\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{4}: checkout: moving from Exercise_wk4 to Exercise_wk4\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{5}: checkout: moving from old-state to Exercise_wk4\n21a3b5a (old-state) HEAD@{6}: checkout: moving from Exercise_wk4 to old-state\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{7}: checkout: moving from 21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 to Exercise_wk4\n21a3b5a (old-state) HEAD@{8}: checkout: moving from Exercise_wk4 to 21a3b5a\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{9}: checkout: moving from 21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 to Exercise_wk4\n21a3b5a (old-state) HEAD@{10}: checkout: moving from Exercise_wk4 to 21a3b\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{11}: checkout: moving from 21a3b5ac1535703f4ce0d6feb2ccf3703f95eee3 to Exercise_wk4\n21a3b5a (old-state) HEAD@{12}: checkout: moving from Exercise_wk4 to 21a3b5a\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{13}: checkout: moving from master to Exercise_wk4\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{14}: checkout: moving from Exercise_wk4 to master\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{15}: checkout: moving from Exercise_wk4 to Exercise_wk4\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{16}: checkout: moving from master to Exercise_wk4\n176137b (origin/master, origin/HEAD, origin/Exercise_wk4, master, Exercise_wk4) HEAD@{17}: checkout: moving from SofieIssue to master\n1f488c6 (SofieIssue) HEAD@{18}: commit: remove pipe operator\n4ead406 HEAD@{19}: commit: update readme.md\n\nWe are now looking at the reflog - the log of where the HEAD has been. It used to be at\n\n9e6c38c HEAD@{1}: commit (amend): add two text files\n\nbut is now at\n\n493609e (HEAD -&gt; Wk4_markup) HEAD@{0}: reset: moving to 493609e\n\nWe can use this history of where the head has been to go back to the previous step. In other words, if we would like to undo a commit, we can always go back to the previous HEAD stage –&gt; the HEAD has been moved one step forward by the commit. Likewise, if we would like to undo a hard reset, we can also go back to the previous HEAD stage –&gt; the HEAD has been moved one step forward by the reset.\nTo undo it all, we can use the indicator that is referenced by the reflog:\n\n% git reset --hard HEAD@{1}\nHEAD is now at 9e6c38c add two text files\n\nUsing reflog and HEAD is in this case more flexible than using log and the SHA-1 hash. reflog yields the log of all changes in the pointer HEAD, while log only gives you the history of the logged commits. Once a commit is undone, it is gone from the log. Moreover, using reflog and HEAD allows you to go back into the future, like in the above example.\nNOTE: Do not wait too long to undo your resets. After a few days/weeks garbage collection may kick in and Git will eventually see old commit as unreferenced. This makes them irretrievable"
  },
  {
    "objectID": "weeks/week-3.html#redo-a-commit",
    "href": "weeks/week-3.html#redo-a-commit",
    "title": "Week 3: Version Control",
    "section": "Redo a commit",
    "text": "Redo a commit\nA hard reset brings you back to a previous state. It loses all changes that have been committed since. If you’d like to undo a single commit and erase the commit message, but not throw out the modifications:\n\ngit reset --soft 493609e \n\nWe are now back at the initial commit, but all changes since have been staged. We can commit these changes as\n\n% git commit -a -m 'everything in a single commit'\n[Wk4_markup 525efa5] everything in a single commit\n 7 files changed, 36 insertions(+), 1 deletion(-)\n create mode 100644 Gerko/Assignment 1/Vink.jpg\n create mode 100644 Gerko/Assignment 1/Vink.pdf\n create mode 100644 README.Rmd\n create mode 100644 add_text_file.txt\n create mode 100644 markup_sticker_SMALL.png\n\nIf we study the log, we find that there are now only two commits.\n\n% git log --pretty=oneline                        \n5fe2c1bd44b1dbc92172b85dec3d87ced7073deb (HEAD -&gt; Wk4_markup) everything in a single commit\n493609efa7ce659ebebf5a0d0300f23788397e68 Initial commit"
  },
  {
    "objectID": "weeks/week-3.html#merging-branches",
    "href": "weeks/week-3.html#merging-branches",
    "title": "Week 3: Version Control",
    "section": "Merging branches",
    "text": "Merging branches\nLet’s see if we can merge the Wk4_markup branch into the Exercise_wk4 branch.\nFirst we need to checkout the branch we would like to merge into:\n\n% git checkout Exercise_wk4\nUpdating files: 100% (174/174), done.\nSwitched to branch 'Exercise_wk4'\nYour branch is up to date with 'origin/Exercise_wk4'.\n\nThen we can attempt to merge:\n\n% git merge Wk4_markup   \nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nCONFLICT (add/add): Merge conflict in README.Rmd\nAuto-merging README.Rmd\nAutomatic merge failed; fix conflicts and then commit the result.\n\nWe’ve now effectively created a conflict. A conflict must be resolved before a merge is possible. If you switch to GiHub desktop, you’ll see this pop-up\n\nYou can use the drop-down menu to choose either modified file version as the one to keep after merging (which means you’ll throw out the other version from the other branch)\n\nThere is also the option to open the file in the editor and manually resolve the conflict.\n\nWe now see the detail about this conflict. Remember that we took an old state as our point of departure? After that point I have changed the header of the Readme.Rmd file. This conflict needs to be resolved before we can merge these branches.\n\n\nResolve the conflict\nChoose Wk4_markup as the reference. Throw out the version from Exercise_wk4. You can do this manually or by choosing the following drop-down item in GitHub Desktop:\n\nAfter that, we can stage the changes and commit them in the Exercise_wk4 branch:\n\n% git add -A\n% git commit -m 'conflict resolved'"
  },
  {
    "objectID": "weeks/week-3.html#hand-in-your-exercise",
    "href": "weeks/week-3.html#hand-in-your-exercise",
    "title": "Week 3: Version Control",
    "section": "Hand in your exercise",
    "text": "Hand in your exercise\n\nTake the merged Exercise_wk4 branch as your point of departure\nCreate a new branch named Wk3_yourname\nChange the filename of the text file to yourname.txt\nStage the changes\nCommit the changes with a custom message\nPublish your branch on GitHub\nDo a pull request that can be automatically merged.\nPost an issue in this year’s repo, wherin you properly reference your PR to the old course repo."
  },
  {
    "objectID": "weeks/week-3.html#solution",
    "href": "weeks/week-3.html#solution",
    "title": "Week 3: Version Control",
    "section": "Solution",
    "text": "Solution\n\n% git branch Wk4_gerkovink \n% git checkout Wk4_gerkovink\nSwitched to branch 'Wk4_gerkovink'\n% mv add_text_file.txt gerkovink.txt\n% git add -A\n% git commit -m 'gerko`s commit'    \n[Wk4_gerkovink fb26e75] gerko`s commit\n 1 file changed, 0 insertions(+), 0 deletions(-)\n rename add_text_file.txt =&gt; gerkovink.txt (100%)\n% git push origin Wk4_gerkovink\nEnumerating objects: 15, done.\nCounting objects: 100% (15/15), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (10/10), done.\nWriting objects: 100% (10/10), 1002 bytes | 1002.00 KiB/s, done.\nTotal 10 (delta 7), reused 0 (delta 0)\nremote: Resolving deltas: 100% (7/7), completed with 3 local objects.\nremote: \nremote: Create a pull request for 'Wk4_gerkovink' on GitHub by visiting:\nremote:      https://github.com/gerkovink/markup2020/pull/new/Wk4_gerkovink\nremote: \nTo https://github.com/gerkovink/markup2020.git\n * [new branch]      Wk4_gerkovink -&gt; Wk4_gerkovink"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Project description",
    "section": "",
    "text": "This course is graded by means of a portfolio. Students collect evidence of their ability to:\n\nUse markup languages for scientific manuscript writing\nProduce a reproducible repository that conforms to rigorous open science and computing standards\nPresent this portfolio using markup languages\nDevelop, test, maintain and host this portfolio."
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Markup Languages and Reproducible Programming in Statistics",
    "section": "",
    "text": "Course: Markup languages and reproducible programming in statistics (202000010)\nCourse coordinator: Gerko Vink (g.vink@uu.nl)\nTeachers: Gerko Vink (g.vink@uu.nl) & Hanne Oberman (h.i.oberman@uu.nl)\nSchedule: MyTimetable"
  },
  {
    "objectID": "course-overview.html#general-information",
    "href": "course-overview.html#general-information",
    "title": "Markup Languages and Reproducible Programming in Statistics",
    "section": "",
    "text": "Course: Markup languages and reproducible programming in statistics (202000010)\nCourse coordinator: Gerko Vink (g.vink@uu.nl)\nTeachers: Gerko Vink (g.vink@uu.nl) & Hanne Oberman (h.i.oberman@uu.nl)\nSchedule: MyTimetable"
  },
  {
    "objectID": "course-overview.html#course-description",
    "href": "course-overview.html#course-description",
    "title": "Markup Languages and Reproducible Programming in Statistics",
    "section": "Course description",
    "text": "Course description\nThis course gives an overview of the state-of-the-art in statistical markup, reproducible programming and scientific digital representation. Students will get to know the professional field of statistical markup and its innovations and challenges. It consists of meetings in which students will learn about markup languages (\\(\\LaTeX\\) and Markdown), learn efficient programming with R Markdown, experience developing Shiny web apps, get to know version control with Git and will create and maintain their own data archive repository and personal (business card) page through GitHub. Combining these lectures, the students get acquainted with different viewpoints on marking up statistical manuscripts, areas of innovation, and challenges that people face when working with, analyzing and reporting (simulated) data. Knowledge obtained from this course will help students face multidimensional problems during their professional career."
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course support",
    "section": "",
    "text": "We will not use the course page on Blackboard.\nInstead, all course materials can be found here on the course website, www.gerkovink.com/markup.\nFor handing in assignments, we will use the course repository on GitHub.\nPlease post your content-related questions as an issue in the course repository.\nQuestions regarding personal circumstances may be shared through e-mail with the teaching team."
  },
  {
    "objectID": "course-support.html#support",
    "href": "course-support.html#support",
    "title": "Course support",
    "section": "",
    "text": "We will not use the course page on Blackboard.\nInstead, all course materials can be found here on the course website, www.gerkovink.com/markup.\nFor handing in assignments, we will use the course repository on GitHub.\nPlease post your content-related questions as an issue in the course repository.\nQuestions regarding personal circumstances may be shared through e-mail with the teaching team."
  },
  {
    "objectID": "slides/lec-2.html#disclaimer",
    "href": "slides/lec-2.html#disclaimer",
    "title": "All flavors markdown",
    "section": "Disclaimer",
    "text": "Disclaimer\nI owe a debt of gratitude to many people as the thoughts and code in these slides are the process of years-long development cycles and discussions with my team, friends, colleagues and peers. When someone has contributed to the content of the slides, I have credited their authorship.\nScientific references are in the footer. Opinions and figures are my own, AI generated or linked to source."
  },
  {
    "objectID": "slides/lec-2.html#rstudio",
    "href": "slides/lec-2.html#rstudio",
    "title": "All flavors markdown",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/lec-2.html#rstudio---integrated-development-environment-ide-for-r",
    "href": "slides/lec-2.html#rstudio---integrated-development-environment-ide-for-r",
    "title": "All flavors markdown",
    "section": "RStudio - Integrated Development Environment (IDE) for R",
    "text": "RStudio - Integrated Development Environment (IDE) for R\n\nRStudio is a powerful integrated development environment (IDE) designed specifically for the R programming language.\nIt offers a user-friendly interface and a suite of tools to enhance your R coding experience.\n\nKey Features of RStudio\n\n1. Code Editing: RStudio provides a code editor with syntax highlighting, autocompletion, and error checking, making your coding process more efficient.\n2. Console: An interactive R console allows you to execute R code line by line and view results in real time.\n3. Environment Pane: Keep track of your variables, data frames, and functions with the environment pane.\n4. Plots and Visualizations: Create and view plots, charts, and visualizations within RStudio.\n5. Integrated Help: Access R documentation, packages, and online resources directly from the IDE.\n6. Version Control: Easily integrate R projects with version control systems like Git.\n7. Markdown Support: RStudio seamlessly integrates with Markdown, making it an ideal choice for creating reproducible reports and documents.\n\nIt plays a crucial role in promoting reproducibility and collaboration in data science and statistical analysis."
  },
  {
    "objectID": "slides/lec-2.html#rmarkdown-github-flavored-markdown-and-quarto",
    "href": "slides/lec-2.html#rmarkdown-github-flavored-markdown-and-quarto",
    "title": "All flavors markdown",
    "section": "RMarkdown, GitHub-Flavored Markdown, and Quarto",
    "text": "RMarkdown, GitHub-Flavored Markdown, and Quarto\n\nMarkdown is a lightweight markup language for creating formatted text using plain text. It’s easy to learn and widely used in various applications.\nGitHub-Flavored Markdown (GFM) is a variant of Markdown used on GitHub (next week), enhancing its capabilities for documentation and collaboration.\nRMarkdown is an extension of Markdown that allows you to embed R code and its output directly within a document.\n\nPerfect for creating reproducible reports, research papers, and presentations.\n\nQuarto is a comprehensive tool for creating reproducible and collaborative data science documents.\n\nCombines the power of Markdown, \\(\\LaTeX\\), and code execution to streamline document preparation."
  },
  {
    "objectID": "slides/lec-2.html#popular-code-editors-for-r",
    "href": "slides/lec-2.html#popular-code-editors-for-r",
    "title": "All flavors markdown",
    "section": "Popular Code Editors (for R)",
    "text": "Popular Code Editors (for R)\n\nRStudio: Ideal for R programming with features tailored for data analysis and visualization.\nVisual Studio Code (VS Code): A versatile code editor with a vast ecosystem of extensions for various languages.\nEclipse (with StatET): Eclipse StatET is an integrated development environment (IDE) for R, offering features for R programming and data analysis.\n\nPopular Notebook Environments\n\nJupyter Notebooks: Widely used interactive kernel-based computing environment for data science and machine learning, supporting multiple (i.e. almost all) programming and scripting languages.\nRMarkdown: An R-based notebook environment that combines code, output, and narrative text in a single document."
  },
  {
    "objectID": "slides/lec-2.html#structure-of-a-quarto-document",
    "href": "slides/lec-2.html#structure-of-a-quarto-document",
    "title": "All flavors markdown",
    "section": "Structure of a Quarto Document",
    "text": "Structure of a Quarto Document\n\nA Quarto document is organized into blocks, which serve as the fundamental building blocks of the document’s content.\nEach block can contain a combination of the following elements:\n\nText: Narrative content and explanations.\nCode: R code chunks for computations and data analysis.\nEquations: Mathematical equations and notation.\nFigures: Visualizations, charts, and images.\nTables: Data tables for presenting results.\nYAML Headers: Metadata and document configuration.\nSections and Subsections: Structuring the document into hierarchical sections for organization."
  },
  {
    "objectID": "slides/lec-2.html#quarto-the-yaml-header",
    "href": "slides/lec-2.html#quarto-the-yaml-header",
    "title": "All flavors markdown",
    "section": "Quarto: the YAML header",
    "text": "Quarto: the YAML header\nYAML (YAML Ain’t Markup Language) is a human-readable data serialization format commonly used for configuration files and metadata in various programming and markup contexts.\n\nYAML is very simple and readable\nIn Quarto and many other applications, YAML is used to specify:\n\nDocument Metadata: Information about the document itself, such as the title, author, date, and document type.\nDocument Configuration: Settings related to the document’s behavior, appearance, and rendering, such as the output format (e.g., HTML, PDF), document template, and style options.\nCustom Variables: Definitions of custom variables or parameters that can be used throughout the document to control behavior or content.\n\n\nHere’s an example of a simple YAML header in a Quarto document:\n---\ntitle: \"All flavors markdown\"\nauthor: \n  - name: Gerko Vink\n    orcid: 0000-0001-9767-1924\n    email: g.vink@uu.nl\n    affiliations:\n      - name: Methodology & Statistics @ UU University\n  - name: Hanne Oberman\n    orcid: 0000-0003-3276-2141\n    email: h.i.oberman@uu.nl\n    affiliations:\n      - name: Methodology & Statistics @ UU\ndate: 13 Sep 2023\ndate-format: \"D MMM YYYY\"\nbibliography: data/lec-2/publications.bib\nexecute: \n  echo: true\neditor: source\nformat: \n  revealjs:\n    theme: [solarized, gerko.scss]\n    progress: true\n    multiplex: true\n    transition: fade\n    slide-number: true\n    margin: 0.075\n    logo: \"images/logo.png\" \n    toc: false\n    toc-depth: 1\n    toc-title: Outline\n    scrollable: true\n    reference-location: margin\n    footer: Gerko Vink and Hanne Oberman - Markup Languages @ UU\n---\nIn this example:\n\ntitle, author, and date provide metadata about the document.\noutput specifies settings related to the document’s output format and theme.\n\nThe YAML header is a powerful tool for customizing and configuring Quarto documents, allowing you to control how the document is rendered and presented. It ensures that important document information and settings are stored in a human-readable and structured format at the beginning of the document."
  },
  {
    "objectID": "slides/lec-2.html#text-in-quarto",
    "href": "slides/lec-2.html#text-in-quarto",
    "title": "All flavors markdown",
    "section": "Text in Quarto",
    "text": "Text in Quarto\nText is text. Nothing more, nothing less\nHeader\nSubheader\nSubsubheader\n# This is a heading indicating a section\n## This is a heading indicating a subsection\n### This is a heading indicating a subsubsection\nBut in the above I used\n### Header\n#### Subheader\n##### Subsubheader"
  },
  {
    "objectID": "slides/lec-2.html#figures",
    "href": "slides/lec-2.html#figures",
    "title": "All flavors markdown",
    "section": "Figures",
    "text": "Figures\n\n\n\n\n\nA surfing elephant\n\n\nThe above figure is left-aligned  The caption is also left-aligned\n\n\n\n\nA surfing elephant\n\n\nThe above figure is centered  The caption is still left-aligned\n\n\nThe code for the figures is\n![A surfing elephant](images/lec-2/elephantastic.png){fig-align=\"left\"}\n![A surfing elephant](images/lec-2/elephantastic.png){fig-align=\"center\"}"
  },
  {
    "objectID": "slides/lec-2.html#columns-sizing-equations-and-proper-centering",
    "href": "slides/lec-2.html#columns-sizing-equations-and-proper-centering",
    "title": "All flavors markdown",
    "section": "Columns, Sizing, Equations and proper centering",
    "text": "Columns, Sizing, Equations and proper centering\n\n\n\n\n\nA surfing \\(\\epsilon\\lambda\\epsilon\\phi h\\alpha\\nu\\tau\\)\n\n\n\\(e^{i\\pi} + 1 = 0\\)\nThe above figure is left-aligned  The caption is also left-aligned  The equation is left-aligned too\n\n\n\n\n\nA surfing elephant\n\n\n\n\\[e^{i\\pi} + 1 = 0\\]\nThe above figure is centered  The caption is also centered  The equation is centered\n\n\nThe code for the slide is\n## Columns, Sizing, Equations and proper centering\n\n::: columns\n::: {.column width=\"50%\"}\n![A surfing $\\epsilon\\lambda\\epsilon\\phi h\\alpha\\nu\\tau$](images/lec-2/elephantastic.png){fig-align=\"left\" width=\"80%\"}\n\n$e^{i\\pi} + 1 = 0$\n\nThe above figure is left-aligned &lt;br&gt;\nThe caption is also left-aligned &lt;br&gt;\nThe equation is left-aligned too\n:::\n\n::: {.column width=\"50%\"}\n&lt;center&gt;\n![A surfing elephant](images/lec-2/elephantastic.png){fig-align=\"center\" width=\"80%\"}\n&lt;/center&gt;\n\n$$e^{i\\pi} + 1 = 0$$\n\nThe above figure is centered &lt;br&gt;\nThe caption is also centered &lt;br&gt;\nThe equation is centered\n:::\n\n:::\n\nThe code for the slide is\n\n``` markdown\n## Columns, Sizing, Equations and proper centering\n\n::: columns\n::: {.column width=\"50%\"}\n![A surfing $\\epsilon\\lambda\\epsilon\\phi h\\alpha\\nu\\tau$](images/lec-2/elephantastic.png){fig-align=\"left\" width=\"80%\"}\n\n$e^{i\\pi} + 1 = 0$\n\nThe above figure is left-aligned &lt;br&gt;\nThe caption is also left-aligned &lt;br&gt;\nThe equation is left-aligned too\n:::\n\n::: {.column width=\"50%\"}\n&lt;center&gt;\n![A surfing elephant](images/lec-2/elephantastic.png){fig-align=\"center\" width=\"80%\"}\n&lt;/center&gt;\n\n$$e^{i\\pi} + 1 = 0$$\n\nThe above figure is centered &lt;br&gt;\nThe caption is also centered &lt;br&gt;\nThe equation is centered\n:::\n\n:::"
  },
  {
    "objectID": "slides/lec-2.html#f-ing-it-all-up",
    "href": "slides/lec-2.html#f-ing-it-all-up",
    "title": "All flavors markdown",
    "section": "F-ing it all up",
    "text": "F-ing it all up\n\n\n\n\n\nRick taking a bad\n\n\n\\(e^{i\\pi} + 1 = 0\\)\nThe above figure is left-aligned  The caption is also left-aligned  The equation is left-aligned too\n\n\n\n\n\nRick taking a bad\n\n\n\n\\[e^{i\\pi} + 1 = 0\\]\nThe above figure is centered  The caption is also centered  The equation is centered\n\n\n::: columns\n::: {.column width=\"70%\"}\n![Rick taking a bad](images/lec-2/bathrick.png){fig-align=\"left\" width=\"70%\"}\n\n$e^{i\\pi} + 1 = 0$\n\n:::\n\n::: {.column width=\"30%\"}\n&lt;center&gt;\n![Rick taking a bad](images/lec-2/bathrick.png){fig-align=\"center\" width=\"30%\"}\n&lt;/center&gt;\n\n$$e^{i\\pi} + 1 = 0$$\n:::\n\n:::"
  },
  {
    "objectID": "slides/lec-2.html#math-ing-it-all-up",
    "href": "slides/lec-2.html#math-ing-it-all-up",
    "title": "All flavors markdown",
    "section": "Math-ing it all up",
    "text": "Math-ing it all up\n\n\n\n\n\nRick taking a bath\n\n\n\\(e^{i\\pi} + 1 = 0\\)\n\n\n\n\n\nRick taking a bath\n\n\n\n\\[e^{i\\pi} + 1 = 0\\]\n\n\n## Math-ing it all up\n::: columns\n::: {.column width=\"70%\"}\n![Rick taking a bath](images/lec-2/goodrick.png){fig-align=\"left\" width=\"30%\"}\n\n$e^{i\\pi} + 1 = 0$\n:::\n\n::: {.column width=\"30%\"}\n&lt;center&gt;\n![Rick taking a bath](images/lec-2/goodrick.png){fig-align=\"center\" width=\"70%\"}\n&lt;/center&gt;\n\n$$e^{i\\pi} + 1 = 0$$\n:::\n\n:::\n\n```markdown\nEND OF EXAMPLE"
  },
  {
    "objectID": "slides/lec-2.html#r-figures",
    "href": "slides/lec-2.html#r-figures",
    "title": "All flavors markdown",
    "section": "R figures",
    "text": "R figures\n\nlibrary(dygraphs)\ndygraph(nhtemp, main = \"New Haven Temperatures\", ylab = \"Temp (F)\")"
  },
  {
    "objectID": "slides/lec-2.html#r-figures-1",
    "href": "slides/lec-2.html#r-figures-1",
    "title": "All flavors markdown",
    "section": "R figures",
    "text": "R figures\n\nlibrary(dygraphs)\ndygraph(nhtemp, main = \"New Haven Temperatures\", ylab = \"Temp (F)\")"
  },
  {
    "objectID": "slides/lec-2.html#r-figures-2",
    "href": "slides/lec-2.html#r-figures-2",
    "title": "All flavors markdown",
    "section": "R figures",
    "text": "R figures\n\nlibrary(ggplot2, warn.conflicts = FALSE)\nlibrary(plotly, warn.conflicts = FALSE)\nggplot(mpg, aes(displ, hwy, colour = class)) +\n  geom_point() +\n  geom_smooth(se = FALSE, method = lm)"
  },
  {
    "objectID": "slides/lec-2.html#r-figures-3",
    "href": "slides/lec-2.html#r-figures-3",
    "title": "All flavors markdown",
    "section": "R figures",
    "text": "R figures\n\nlibrary(ggplot2, warn.conflicts = FALSE)\nlibrary(plotly, warn.conflicts = FALSE)\np &lt;- ggplot(mpg, aes(displ, hwy, colour = class)) +\n  geom_point() +\n  geom_smooth(se = FALSE, method = lm) \np %&gt;% ggplotly()"
  },
  {
    "objectID": "slides/lec-2.html#equations",
    "href": "slides/lec-2.html#equations",
    "title": "All flavors markdown",
    "section": "Equations",
    "text": "Equations\n\n$\\mu$ is used for in-line equations\n$$\\mu$$ is used for equations\n\nLet’s assume that \\(Y\\) follows a normal distribution. \\[Y \\sim  \\mathcal{N}(\\mu, \\sigma^2)\\] Where we set in our simulations \\(\\mu = 10\\) and \\(\\sigma^2 = 5\\). We do something for every \\(Y_i\\)."
  },
  {
    "objectID": "slides/lec-2.html#equations-1",
    "href": "slides/lec-2.html#equations-1",
    "title": "All flavors markdown",
    "section": "Equations",
    "text": "Equations\n\n$\\mu$ is used for in-line equations\n$$\\mu$$ is used for equations\n\nLet’s assume that \\(y\\) is a vector with \\(N\\) elements such that \\[y \\sim  \\mathcal{N}(\\mu, \\sigma^2),\\] where we set in our simulations \\(\\mu = 10\\) and \\(\\sigma^2 = 5\\). We do something for every \\(y_i\\) with \\(i = 1, \\dots, N\\)."
  },
  {
    "objectID": "slides/lec-2.html#code-chunks",
    "href": "slides/lec-2.html#code-chunks",
    "title": "All flavors markdown",
    "section": "Code chunks",
    "text": "Code chunks\nWe already saw some markdown code chunks. We can run inline code to calculate that 12 * 234 is 2808 by using `r ` and code chunks to evaluate larger blocks of code, such as:\n\n\nCode\nlibrary(ggplot2)\n\nggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c() +\n  theme_minimal()\n\nggplot(mpg, aes(x = hwy, y = cty, color = displ)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c(option = \"E\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n(a) Color by number of cylinders\n\n\n\n\n\n\n\n(b) Color by engine displacement, in liters\n\n\n\n\nFigure 1: City and highway mileage for 38 popular models of cars."
  },
  {
    "objectID": "slides/lec-2.html#the-previous-slide",
    "href": "slides/lec-2.html#the-previous-slide",
    "title": "All flavors markdown",
    "section": "The previous slide",
    "text": "The previous slide\n## Code chunks and explicit caching\n\n```{r}\n#| output: asis\n\nanswer &lt;- 12 * 234\n``` \n\n\nWe already saw some `markdown` code chunks. We can run inline code to calculate \nthat `12 * 234` is ` r answer ` by using `r  ` and code chunks to evaluate \nlarger blocks of code, such as:\n\n\n\n#| output: asis\n#| label: fig-mpg\n#| fig-cap: \"City and highway mileage for 38 popular models of cars.\"\n#| fig-subcap:\n#|   - \"Color by number of cylinders\"\n#|   - \"Color by engine displacement, in liters\"\n#| layout-ncol: 2\n#| column: page\n#| code-fold: true\nlibrary(ggplot2)\n\nggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c() +\n  theme_minimal()\n\nggplot(mpg, aes(x = hwy, y = cty, color = displ)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c(option = \"E\") +\n  theme_minimal()"
  },
  {
    "objectID": "slides/lec-2.html#explicit-caching",
    "href": "slides/lec-2.html#explicit-caching",
    "title": "All flavors markdown",
    "section": "Explicit Caching",
    "text": "Explicit Caching\n\nExplicit caching is a technique used in RMarkdown and Quarto documents to store and reuse the results of expensive computations or data processing steps.\nIt helps improve the efficiency of document generation and ensures reproducibility by avoiding redundant calculations. \n\nWhy Use Explicit Caching?\n\nEfficiency: Caching saves time and resources by avoiding the repeated execution of time-consuming code chunks.\nReproducibility: Explicit caching ensures that the same results are used when rendering the document, even if the code is modified or re-executed.\nVersion Control: Caching reduces the size of version-controlled documents by storing intermediate results separately."
  },
  {
    "objectID": "slides/lec-2.html#how-does-explicit-caching-work",
    "href": "slides/lec-2.html#how-does-explicit-caching-work",
    "title": "All flavors markdown",
    "section": "How Does Explicit Caching Work?",
    "text": "How Does Explicit Caching Work?\nIn RMarkdown and Quarto, you can use cache directives to specify which code chunks should be cached and which should not.\n\nCached chunks are identified by a unique hash based on their code content, ensuring consistency.\n\nThe following code block\n#| cache: true\n#| code-line-numbers: true\n#| label: imputation\nlibrary(mice)\nlibrary(magrittr)\nlibrary(purrr)\nimp &lt;- nhanes %&gt;% mice(print = FALSE)\nimp |&gt;\n  complete(\"all\") %&gt;% \n  map(~.x %$% lm(bmi ~ chl + hyp)) |&gt;\n  pool()\nwould result in this output\n\nlibrary(mice)\nlibrary(magrittr)\nlibrary(purrr)\nimp &lt;- nhanes %&gt;% mice(print = FALSE)\nimp |&gt;\n  complete(\"all\") %&gt;% \n  map(~.x %$% lm(bmi ~ chl + hyp)) |&gt;\n  pool()\n\nClass: mipo    m = 5 \n         term m    estimate         ubar            b            t dfcom\n1 (Intercept) 5 22.74349586 1.466782e+01 5.5748962726 2.135770e+01    22\n2         chl 5  0.02798109 4.276476e-04 0.0001721876 6.342727e-04    22\n3         hyp 5 -1.13102073 4.505032e+00 0.3052774523 4.871365e+00    22\n        df        riv     lambda       fmi\n1 10.36596 0.45609201 0.31323021 0.4159942\n2 10.01903 0.48316686 0.32576703 0.4293435\n3 18.23535 0.08131639 0.07520129 0.1623012\n\n\nwith corresponding cache structure relative to the root and format of the output file:"
  },
  {
    "objectID": "slides/lec-2.html#tables",
    "href": "slides/lec-2.html#tables",
    "title": "All flavors markdown",
    "section": "Tables",
    "text": "Tables\nUse https://www.tablesgenerator.com/markdown_tables if you need to make a table from scratch.\nOtherwise, use tibbles:\n\nmice::boys |&gt; \n  tibble::as_tibble()\n\n# A tibble: 748 × 9\n     age   hgt   wgt   bmi    hc gen   phb      tv reg  \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;int&gt; &lt;fct&gt;\n 1 0.035  50.1  3.65  14.5  33.7 &lt;NA&gt;  &lt;NA&gt;     NA south\n 2 0.038  53.5  3.37  11.8  35   &lt;NA&gt;  &lt;NA&gt;     NA south\n 3 0.057  50    3.14  12.6  35.2 &lt;NA&gt;  &lt;NA&gt;     NA south\n 4 0.06   54.5  4.27  14.4  36.7 &lt;NA&gt;  &lt;NA&gt;     NA south\n 5 0.062  57.5  5.03  15.2  37.3 &lt;NA&gt;  &lt;NA&gt;     NA south\n 6 0.068  55.5  4.66  15.1  37   &lt;NA&gt;  &lt;NA&gt;     NA south\n 7 0.068  52.5  3.81  13.8  34.9 &lt;NA&gt;  &lt;NA&gt;     NA south\n 8 0.071  53    3.89  13.8  35.8 &lt;NA&gt;  &lt;NA&gt;     NA west \n 9 0.071  55.1  3.88  12.8  36.8 &lt;NA&gt;  &lt;NA&gt;     NA west \n10 0.073  54.5  4.2   14.1  38   &lt;NA&gt;  &lt;NA&gt;     NA east \n# ℹ 738 more rows\n\n\nor use e.g. library(DT) for customization:\n\nlibrary(DT)\nmtcars %&gt;% \n  datatable(options = list(pageLength = 25))"
  },
  {
    "objectID": "slides/lec-2.html#reprex-and-renv",
    "href": "slides/lec-2.html#reprex-and-renv",
    "title": "All flavors markdown",
    "section": "reprex and renv",
    "text": "reprex and renv\nlibrary(renv)\n#&gt; \n#&gt; Attaching package: 'renv'\n#&gt; The following objects are masked from 'package:stats':\n#&gt; \n#&gt;     embed, update\n#&gt; The following objects are masked from 'package:utils':\n#&gt; \n#&gt;     history, upgrade\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     autoload, load, remove\nrenv::init()\n#&gt; - Linking packages into the project library ... Done!\n#&gt; The following package(s) will be updated in the lockfile:\n#&gt; \n#&gt; # CRAN -----------------------------------------------------------------------\n#&gt; - backports       [* -&gt; 1.4.1]\n#&gt; - base64enc       [* -&gt; 0.1-3]\n#&gt; - broom           [* -&gt; 1.0.4]\n#&gt; - bslib           [* -&gt; 0.4.2]\n#&gt; - cachem          [* -&gt; 1.0.8]\n#&gt; - cli             [* -&gt; 3.6.1]\n#&gt; - cpp11           [* -&gt; 0.4.3]\n#&gt; - digest          [* -&gt; 0.6.31]\n#&gt; - dplyr           [* -&gt; 1.1.2]\n#&gt; - ellipsis        [* -&gt; 0.3.2]\n#&gt; - evaluate        [* -&gt; 0.21]\n#&gt; - fansi           [* -&gt; 1.0.4]\n#&gt; - fastmap         [* -&gt; 1.1.1]\n#&gt; - fontawesome     [* -&gt; 0.5.1]\n#&gt; - fs              [* -&gt; 1.6.2]\n#&gt; - generics        [* -&gt; 0.1.3]\n#&gt; - glue            [* -&gt; 1.6.2]\n#&gt; - highr           [* -&gt; 0.10]\n#&gt; - htmltools       [* -&gt; 0.5.5]\n#&gt; - jquerylib       [* -&gt; 0.1.4]\n#&gt; - jsonlite        [* -&gt; 1.8.4]\n#&gt; - knitr           [* -&gt; 1.43]\n#&gt; - lattice         [* -&gt; 0.21-8]\n#&gt; - lifecycle       [* -&gt; 1.0.3]\n#&gt; - magrittr        [* -&gt; 2.0.3]\n#&gt; - memoise         [* -&gt; 2.0.1]\n#&gt; - mime            [* -&gt; 0.12]\n#&gt; - pillar          [* -&gt; 1.9.0]\n#&gt; - pkgconfig       [* -&gt; 2.0.3]\n#&gt; - purrr           [* -&gt; 1.0.1]\n#&gt; - R6              [* -&gt; 2.5.1]\n#&gt; - rappdirs        [* -&gt; 0.3.3]\n#&gt; - Rcpp            [* -&gt; 1.0.11]\n#&gt; - RcppArmadillo   [* -&gt; 0.12.4.0.0]\n#&gt; - renv            [* -&gt; 1.0.2]\n#&gt; - rlang           [* -&gt; 1.1.1]\n#&gt; - rmarkdown       [* -&gt; 2.22]\n#&gt; - sass            [* -&gt; 0.4.6]\n#&gt; - stringi         [* -&gt; 1.7.12]\n#&gt; - stringr         [* -&gt; 1.5.0]\n#&gt; - tibble          [* -&gt; 3.2.1]\n#&gt; - tidyr           [* -&gt; 1.3.0]\n#&gt; - tidyselect      [* -&gt; 1.2.0]\n#&gt; - tinytex         [* -&gt; 0.45]\n#&gt; - utf8            [* -&gt; 1.2.3]\n#&gt; - vctrs           [* -&gt; 0.6.2]\n#&gt; - withr           [* -&gt; 2.5.0]\n#&gt; - xfun            [* -&gt; 0.39]\n#&gt; - yaml            [* -&gt; 2.3.7]\n#&gt; \n#&gt; # GitHub ---------------------------------------------------------------------\n#&gt; - mice            [* -&gt; gerkovink/mice@match_conditional]\n#&gt; \n#&gt; The version of R recorded in the lockfile will be updated:\n#&gt; - R               [* -&gt; 4.3.0]\n#&gt; \n#&gt; - Lockfile written to \"/private/var/folders/yx/6rn4qpl13wsgk4c7s3jc9d1r0000gp/T/RtmpMqetyA/reprex-1233f6d959b19-drear-kitty/renv.lock\".\nlibrary(mice)\n#&gt; \n#&gt; Attaching package: 'mice'\n#&gt; The following object is masked from 'package:stats':\n#&gt; \n#&gt;     filter\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     cbind, rbind\nlibrary(magrittr)\nlibrary(purrr)\n#&gt; \n#&gt; Attaching package: 'purrr'\n#&gt; The following object is masked from 'package:magrittr':\n#&gt; \n#&gt;     set_names\n#&gt; The following object is masked from 'package:renv':\n#&gt; \n#&gt;     modify\nrenv::snapshot()\n#&gt; - The lockfile is already up to date.\nrenv::remove(\"mice\")\n#&gt; - Removing package(s) from project library ...\n#&gt; Removing package 'mice' ... Done!\nrenv::restore()\n#&gt; The following package(s) will be updated:\n#&gt; \n#&gt; # GitHub ---------------------------------------------------------------------\n#&gt; - mice   [* -&gt; gerkovink/mice@match_conditional]\n#&gt; \n#&gt; # Installing packages --------------------------------------------------------\n#&gt; - Installing mice ...                           OK [linked from cache]\nimp &lt;- nhanes %&gt;% mice(print = FALSE)\nimp |&gt;\n  complete(\"all\") %&gt;% \n  map(~.x %$% lm(bmi ~ chl + hyp)) |&gt;\n  pool()\n#&gt; Class: mipo    m = 5 \n#&gt;          term m   estimate         ubar            b            t dfcom\n#&gt; 1 (Intercept) 5 20.6687887 2.020809e+01 8.8963873222 3.088375e+01    22\n#&gt; 2         chl 5  0.0354435 5.409979e-04 0.0001081414 6.707676e-04    22\n#&gt; 3         hyp 5 -0.8447582 4.353337e+00 0.9275040571 5.466342e+00    22\n#&gt;          df       riv    lambda       fmi\n#&gt; 1  9.489411 0.5282868 0.3456725 0.4504537\n#&gt; 2 14.161181 0.2398710 0.1934645 0.2874598\n#&gt; 3 13.811544 0.2556671 0.2036105 0.2983537\n\nsessionInfo()\n#&gt; R version 4.3.0 (2023-04-21)\n#&gt; Platform: aarch64-apple-darwin20 (64-bit)\n#&gt; Running under: macOS Ventura 13.6\n#&gt; \n#&gt; Matrix products: default\n#&gt; BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \n#&gt; LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n#&gt; \n#&gt; locale:\n#&gt; [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n#&gt; \n#&gt; time zone: Europe/Amsterdam\n#&gt; tzcode source: internal\n#&gt; \n#&gt; attached base packages:\n#&gt; [1] stats     graphics  grDevices utils     datasets  methods   base     \n#&gt; \n#&gt; other attached packages:\n#&gt; [1] purrr_1.0.1    magrittr_2.0.3 mice_3.15.3    renv_1.0.2    \n#&gt; \n#&gt; loaded via a namespace (and not attached):\n#&gt;  [1] vctrs_0.6.2      cli_3.6.1        knitr_1.43       rlang_1.1.1     \n#&gt;  [5] xfun_0.39        generics_0.1.3   glue_1.6.2       backports_1.4.1 \n#&gt;  [9] htmltools_0.5.5  fansi_1.0.4      rmarkdown_2.22   grid_4.3.0      \n#&gt; [13] evaluate_0.21    tibble_3.2.1     fastmap_1.1.1    yaml_2.3.7      \n#&gt; [17] lifecycle_1.0.3  compiler_4.3.0   dplyr_1.1.2      fs_1.6.2        \n#&gt; [21] pkgconfig_2.0.3  Rcpp_1.0.11      tidyr_1.3.0      rstudioapi_0.14 \n#&gt; [25] lattice_0.21-8   digest_0.6.31    R6_2.5.1         tidyselect_1.2.0\n#&gt; [29] reprex_2.0.2     utf8_1.2.3       pillar_1.9.0     tools_4.3.0     \n#&gt; [33] withr_2.5.0      broom_1.0.4\nCreated on 2023-09-27 with reprex v2.0.2"
  },
  {
    "objectID": "slides/lec-2.html#benefits-of-using-renv",
    "href": "slides/lec-2.html#benefits-of-using-renv",
    "title": "All flavors markdown",
    "section": "Benefits of Using renv",
    "text": "Benefits of Using renv\n\n1. Dependency Isolation: renv creates a dedicated environment for each project, preventing conflicts between package versions.\n2. Reproducibility: With renv, you can capture and record the specific package versions used in your project, ensuring reproducibility over time.\n3. Collaboration: Share your project with others, and they can easily recreate the same environment using renv.lock.\n4. Easier Package Installation: renv simplifies package installation. Just run renv::restore() to set up the project environment.\n5. Automatic Snapshot: renv automatically generates a renv.lock file, listing all package versions used, making it easy to recreate the environment.\n6. Compatibility: renv is compatible with popular version control systems like Git, facilitating collaboration and sharing.\n\nUse renv::snapshot() to update the renv.lock file when you add or update packages. You can use renv::activate() and renv::deactivate() to activate or deactivate renv for your project."
  },
  {
    "objectID": "slides/lec-2.html#diagrams",
    "href": "slides/lec-2.html#diagrams",
    "title": "All flavors markdown",
    "section": "Diagrams",
    "text": "Diagrams\n%%| echo: false\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C &lt;--&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C &lt;--&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\nSee Quarto Diagrams for a more comprehensive overview of all graphing engines. This Live online Mermaid editor is awesome!"
  },
  {
    "objectID": "slides/lec-2.html#scientific-publishing-with-rticles-and-quarto",
    "href": "slides/lec-2.html#scientific-publishing-with-rticles-and-quarto",
    "title": "All flavors markdown",
    "section": "Scientific publishing with rticles and Quarto",
    "text": "Scientific publishing with rticles and Quarto\nTo use rticles from RStudio, you can access the templates through File -&gt; New File -&gt; R Markdown. This will open the dialog box where you can select from one of the available templates:\n\nQuarto\nThe quarto use template command can be used to create an article from one the below formats.\n\n\nTerminal\n\nquarto use template quarto-journals/acm\nquarto use template quarto-journals/plos\nquarto use template quarto-journals/elsevier\nquarto use template quarto-journals/acs\nquarto use template quarto-journals/jss"
  },
  {
    "objectID": "slides/lec-2.html#citations",
    "href": "slides/lec-2.html#citations",
    "title": "All flavors markdown",
    "section": "Citations",
    "text": "Citations\nOberman and Vink (2023) and Cai, Van Buuren and Vink (2023) are some of our team’s most recent publications. Some references - such as some work by Reinder Banning and Gerko Vink are much older (2010) or contain simple and contemporary solutions by Volker and Vink (2022, 2–4) or cool but potentially confusing images (Schouten and Vink 2021, 1255).\n\nBut you can also refer to Oberman and Vink (2023) here\n\n\n\nBanning, Reinder, and Gerko Vink. 2010. “Methoden En Indicatoren Voor Het Evalueren En Beschrijven van Controle- En Correctieprocessen.” CBS nota DMV-2010- 06-08-RBNG-GVNK. Centraal Bureau voor de Statistiek.\n\n\nCai, Mingyang, Stef van Buuren, and Gerko Vink. 2023. “Graphical and Numerical Diagnostic Tools to Assess Multiple Imputation Models by Posterior Predictive Checking.” Heliyon.\n\n\nOberman, Hanne I., and Gerko Vink. 2023. “Toward a Standardized Evaluation of Imputation Methodology.” Biometrical Journal, 2200107. https://doi.org/https://doi.org/10.1002/bimj.202200107.\n\n\nSchouten, Rianne Margaretha, and Gerko Vink. 2021. “The Dance of the Mechanisms: How Observed Information Influences the Validity of Missingness Assumptions.” Sociological Methods & Research 50 (3): 1243–58.\n\n\nVolker, Thom, and Gerko Vink. 2022. “Synthetic Data in r: Generating Synthetic Data with High Utility Using Mice.” Https://Www.gerkovink.com/miceVignettes/Synthetic/Synthetic.html.\n\n\n\n## Citations\n\n@eval and Cai, Van Buuren and Vink [-@cai2023graphical] are some of our team's most recent publications. Some references - such as some work by Reinder Banning and Gerko Vink are much older [-@banningvink] or contain simple and contemporary solutions by @vigntg [p. 2-4] or cool but potentially confusing images [@schouten2021dance, 1255].\n\n::: footer\nBut you can also refer to @eval here\n:::\n\n::: {#refs}\n:::\n\n\n\nGerko Vink and Hanne Oberman - Markup Languages @ UU"
  },
  {
    "objectID": "slides/lec-1.html#disclaimer",
    "href": "slides/lec-1.html#disclaimer",
    "title": "Welcome to MLaRPiS",
    "section": "Disclaimer",
    "text": "Disclaimer\nI owe a debt of gratitude to many people as the thoughts and code in these slides are the process of years-long development cycles and discussions with my team, friends, colleagues and peers. When someone has contributed to the content of the slides, I have credited their authorship.\nScientific references are in the footer. Opinions and figures are my own."
  },
  {
    "objectID": "slides/lec-1.html#course-aims-outline",
    "href": "slides/lec-1.html#course-aims-outline",
    "title": "Welcome to MLaRPiS",
    "section": "Course Aims & Outline",
    "text": "Course Aims & Outline\nOfficial: This course gives an overview of the state-of-the-art in statistical markup, reproducible programming and scientific digital representation.\nRealistic: Hanne and Gerko will give you peek into our lives as opinionated developers. We will cover: \n\n\n\nWeek\nDate\nFocus\nLocation\n\n\n\n\n1\n13 Sep\nIntroduction to Markup Languages; and LaTeX\nBOL 1062\n\n\n2\n27 Sep\nMarkdown in (most) Flavors\nBOL 1025\n\n\n3\n01 Nov\nVersion Control and Development Flow\nSGG 128\n\n\n4\n08 Nov\nReproducible Research Repositories\nBOL 1025\n\n\n5\n22 Nov\nDeveloper Portfolio\nBOL 1025\n\n\n6\n06 Dec\nPackages, Code Robustness and Unit Testing\nBOL 1025"
  },
  {
    "objectID": "slides/lec-1.html#course-materials",
    "href": "slides/lec-1.html#course-materials",
    "title": "Welcome to MLaRPiS",
    "section": "Course materials",
    "text": "Course materials\n\n\n\n\n\n\nImportant\n\n\nWe won’t use Blackboard. All materials can be found at\nwww.gerkovink.com/markup\nHand in\nAll contributions to this course are to be delivered to this repository\ngithub.com/gerkovink/markup2023\nPlease post your content-related questions as an issue in the same repository\nFinalization\nDeadline for all is Jan 8 2024. Grades will be available Jan 12 2024"
  },
  {
    "objectID": "slides/lec-1.html#deliverables",
    "href": "slides/lec-1.html#deliverables",
    "title": "Welcome to MLaRPiS",
    "section": "Deliverables",
    "text": "Deliverables\nYou must submit a portfolio that proves\n\nThat you can use markup languages for scientific manuscript writing\nThat you can produce a reproducible repository that conforms to rigorous open science and computing standards\nThat you can present this portfolio using markup languages\nThat you are able to develop, test, maintain and host this portfolio"
  },
  {
    "objectID": "slides/lec-1.html#this-means",
    "href": "slides/lec-1.html#this-means",
    "title": "Welcome to MLaRPiS",
    "section": "This means",
    "text": "This means\nthat you should cover at least\n\nMarkup manuscript in either \\(\\LaTeX\\) or Quarto\nResearch repository detailing a reproducible simulation with proper licencing\nPersonal repository (website that showcases your work) hosted with GitHub pages.\n\nand one of\n\nAn error-free compilable source R-package on a GitHub with proper licencing, tests, version sequence and a referable DOI\nA Shiny app hosted on GitHub with proper licensing, version sequence and a referable DOI and with an error free Shinyapps.io\n\nA more comprehensive portfolio can result in extra credit in the form of a higher grade."
  },
  {
    "objectID": "slides/lec-1.html#what-is-markup",
    "href": "slides/lec-1.html#what-is-markup",
    "title": "Welcome to MLaRPiS",
    "section": "What is Markup?",
    "text": "What is Markup?\nA markup language is a system for annotating a document that provides structure and meaning to the content, allowing it to be processed and displayed in a consistent manner across different platforms and devices.\nExtremely brief history\n\nGML (Generalized Markup Language): Developed in the 1960s by IBM, GML was one of the first markup languages. It was designed to help with the publishing process by defining the structure and content of documents.\nSGML (Standard Generalized Markup Language): Evolved from GML in the 1980s, SGML became an ISO standard and was used as the basis for several other markup languages, including HTML.\nHTML (HyperText Markup Language): Developed in the early 1990s by Tim Berners-Lee, HTML became the standard markup language for creating web pages. It’s a subset of SGML.\nXML (eXtensible Markup Language): Introduced in the late 1990s, XML was designed to store and transport data. Unlike HTML, which is about displaying information, XML is about carrying information."
  },
  {
    "objectID": "slides/lec-1.html#technically-speaking",
    "href": "slides/lec-1.html#technically-speaking",
    "title": "Welcome to MLaRPiS",
    "section": "Technically speaking",
    "text": "Technically speaking\n\nTeX (aka \\(\\LaTeX\\)) is not a markup language, but a software system for document preparation. This is because plain text is used as opposed to other markup languages. However, markup tagging conventions are used to define and stylize document stucture, graphical elements, citations and text.\nMarkdown is an extremely simplified alternative to document preparation software systems. markdown is a lightweigt markup language that can be edited using any text editor, while being quick and easy to compile. It is nowadays widely considered as the language of the internet as it bridges most great attributes of other markup languages.\nQuarto is even more comprehensive as it is an open-source scientific and technical publishing system. quarto is aimed at delivering reproducible, consistent Pandoc markdown documents that unify the best of all other markup languages."
  },
  {
    "objectID": "slides/lec-1.html#importance-in-digital-representation",
    "href": "slides/lec-1.html#importance-in-digital-representation",
    "title": "Welcome to MLaRPiS",
    "section": "Importance in digital representation",
    "text": "Importance in digital representation\n\nConsistency: Markup languages ensure that content is displayed consistently across different platforms and devices.\nSeparation of Content and Presentation: Markup languages allow for a clear distinction between content and how it’s presented. This separation makes it easier to repurpose content for different mediums or platforms.\nInteroperability: Markup languages enable different systems and applications to communicate with each other by providing a standardized way to represent data.\nease of mind: Styles in modern markup languages allow you to focus on the content and not"
  },
  {
    "objectID": "slides/lec-1.html#everyday-interactions-with-markup",
    "href": "slides/lec-1.html#everyday-interactions-with-markup",
    "title": "Welcome to MLaRPiS",
    "section": "Everyday interactions with markup",
    "text": "Everyday interactions with markup\n\nHTML in Everyday Life:\n\nWeb Browsing: Every time you visit a website, you’re interacting with content structured by HTML. From paragraphs to images to links, all are defined using HTML tags.\nEmails: Many emails, especially those with formatting, images, or links, are compose using HTML.\nOnline Platforms: Social media posts, blogs, and even some word processors use HTML behind the scenes to structure and display content.\n\nXML in Everyday Applications:\n\nData Storage: Many applications use XML to store configuration data, user settings, or other information.\nOffice Documents: Formats like Microsoft’s .docx (Word) or .xlsx (Excel) are essentially zipped XML files. When you save a Word document, you’re saving XML data.\nWeb Services: Many web services and APIs return data in XML format, which is then processed and displayed by the application.\nRSS Feeds: Used by news websites and blogs to syndicate content, RSS feeds are XML documents that can be read by various applications."
  },
  {
    "objectID": "slides/lec-1.html#emc2",
    "href": "slides/lec-1.html#emc2",
    "title": "Welcome to MLaRPiS",
    "section": "\\(E=MC^2\\)",
    "text": "\\(E=MC^2\\)\n\n\n\n\n\n\nImportant\n\n\nBe careful with your online carbon footprint\n\n\n\nIn the grand scheme of things, trivial activities like emailing, chatting and video conferencing may seem insignificant. Collectively it adds up to a much larger carbon footprint than needed.\nEverything that you do online is either energy or costs energy. And cloud storage means burning carbon for eternity."
  },
  {
    "objectID": "slides/lec-1.html#traditional-word-processors-vs-scientific-writing",
    "href": "slides/lec-1.html#traditional-word-processors-vs-scientific-writing",
    "title": "Welcome to MLaRPiS",
    "section": "Traditional Word Processors vs Scientific Writing",
    "text": "Traditional Word Processors vs Scientific Writing\n\n\nGraphical (Word) Processors\n\nWhile Word and similar word processors have built-in equation editors, they often lack the flexibility and customization options that markup languages offer.\nFormatting equations consistently across a large document or multiple documents can be challenging in Word.\nCollaborating on complex scientific documents with multiple authors can lead to formatting inconsistencies, especially when different versions of the software are used.\nIntegration with other Tools is not always straightforward or impossible.\nWord documents, especially those with complex equations, might not always display consistently across different devices or software versions.\n\n\nMarkup languages\n\nMarkup languages (especially \\(\\LaTeX\\)) provide precise control over the layout and appearance of elemants and equations.\nThe same code will produce the same output regardless of the platform or software version, ensuring consistency.\nSimple integration with version control systems, reference managers, and other tools essential for scientific writing.\nMany scientific journals provide \\(\\LaTeX\\) or markdown templates, making it easier for researchers to prepare manuscripts that meet specific formatting requirements."
  },
  {
    "objectID": "slides/lec-1.html#why-are-we-teaching-you-markup",
    "href": "slides/lec-1.html#why-are-we-teaching-you-markup",
    "title": "Welcome to MLaRPiS",
    "section": "Why are we teaching you Markup?",
    "text": "Why are we teaching you Markup?\nIf you prefere lists:\n\nReproducibility (Wk2)\nVersion controlling and Collaboration (Wk3)\nConsistent presentation\nTime-saving (After this course)\nModular nature\nBibliography management (Wk1)\nOh, Behave (Wk 1-6)\n\nIf you prefer arguments:\n\nIt is the standard in scientific publishing and research\nWe prepare you for a career built on scientific principles\nJournal styles"
  },
  {
    "objectID": "slides/lec-1.html#the-evolution-of-tex-and-latex",
    "href": "slides/lec-1.html#the-evolution-of-tex-and-latex",
    "title": "Welcome to MLaRPiS",
    "section": "The evolution of TeX and \\(\\LaTeX\\)",
    "text": "The evolution of TeX and \\(\\LaTeX\\)\n\nTeX: Birth of a Typesetting Revolution\n\n1978: Donald Knuth, a computer scientist, develops TeX, a typesetting system.\nMotivation: Dissatisfaction with the quality of typesetting in his book, “The Art of Computer Programming”.\nKey Features: Precise control over typography, mathematical typesetting, and cross-referencing.\n\nLaTeX: Building on TeX’s Foundation\n\nEarly 1980s: Leslie Lamport creates \\(\\LaTeX\\), a document preparation system based on TeX.\nGoal: Simplify the complex TeX formatting commands, making it more accessible to a broader audience.\nAdvantages: Provides document structure through commands like \\section and \\tableofcontents.\n\nTeX and \\(\\LaTeX\\): A Symbiotic Relationship\n\n\\(\\LaTeX\\) builds on the TeX typesetting engine, allowing users to create professional documents and presentations.\n\\(\\LaTeX\\) packages extend functionality, catering to various types of documents (e.g., articles, theses, presentations)."
  },
  {
    "objectID": "slides/lec-1.html#precision",
    "href": "slides/lec-1.html#precision",
    "title": "Welcome to MLaRPiS",
    "section": "Precision",
    "text": "Precision\n\nUnmatched Typography Precision: TeX and LaTeX excel at typesetting with precise control over fonts, layout, and mathematical notation.\n\n\nIdeal for academic papers, theses, and publications with complex formatting requirements.\n\n\nSuperior Mathematical Typesetting: LaTeX’s native support for mathematical notation makes it the go-to choice for scientists, engineers, and mathematicians.\n\n\nNo more MS equation editor\n\n\nCross-Referencing and Bibliography Management: Effortlessly manage references and citations with BibTeX in LaTeX.\n\n\nAutomatic numbering, referencing, and bibliography generation.\n\n\nCollaboration and Version Control: LaTeX documents can be easily managed using version control systems like Git (Wk 3).\n\n\nThis makes it straightforward to collaborate simultaneously on the same text and documents."
  },
  {
    "objectID": "slides/lec-1.html#and",
    "href": "slides/lec-1.html#and",
    "title": "Welcome to MLaRPiS",
    "section": "And…",
    "text": "And…\n\nProfessional Look and Feel: LaTeX produces documents with a professional and consistent appearance.\n\n\nThis explains the popularity in academia, research, and publishing.\n\n\nLaTeX Ecosystem: A vast collection of packages and templates is available on CTAN to cater to diverse document types.\nLong-Term Stability: Documents created with TeX and LaTeX have a long shelf life.\n\n\nBecause TeX is software, it ensures compatibility across different platforms and software versions."
  },
  {
    "objectID": "slides/lec-1.html#hands-on",
    "href": "slides/lec-1.html#hands-on",
    "title": "Welcome to MLaRPiS",
    "section": "Hands on",
    "text": "Hands on\n\nIntroduction to LaTeX and the basics of LaTeX for scientific writing. see this week’s lab\nIncorporating equations. background\nIncorporating figures and tables. background \n\n\n\n\n\nsource and LaTeX"
  },
  {
    "objectID": "slides/lec-1.html#collaborative-latex-editing-with-overleaf",
    "href": "slides/lec-1.html#collaborative-latex-editing-with-overleaf",
    "title": "Welcome to MLaRPiS",
    "section": "Collaborative LaTeX Editing with Overleaf",
    "text": "Collaborative LaTeX Editing with Overleaf\nOverleaf is an online LaTeX editor that allows users to create, edit, and collaborate on LaTeX documents in real time.\n\n\n\nIt’s a cloud-based platform that eliminates the need for local LaTeX installations and simplifies the collaborative writing process."
  },
  {
    "objectID": "slides/lec-1.html#benefits-of-using-overleaf",
    "href": "slides/lec-1.html#benefits-of-using-overleaf",
    "title": "Welcome to MLaRPiS",
    "section": "Benefits of Using Overleaf",
    "text": "Benefits of Using Overleaf\n\nCollaborate with colleagues and teammates in real time, regardless of their physical location.\nMultiple users can edit the same document simultaneously, making group projects efficient.\nDevice agnostic and therefore worry-free.\nOverleaf integrates with Git, allowing users to track changes, revert to previous versions, and manage document history.\nOverleaf offers a vast library of templates for various document types, including research papers, theses, presentations, and more.\nOverleaf compiles LaTeX documents in the cloud, so you don’t need to configure or run LaTeX locally.\nIt just works!"
  },
  {
    "objectID": "slides/lec-1.html#potential-challenges-of-using-overleaf",
    "href": "slides/lec-1.html#potential-challenges-of-using-overleaf",
    "title": "Welcome to MLaRPiS",
    "section": "Potential Challenges of Using Overleaf",
    "text": "Potential Challenges of Using Overleaf\n\nInternet Dependency: Overleaf requires a stable internet connection.\nLimited Offline Access: Overleaf operates online, which means no internet, no access to the convenience of Overleaf.\nPrivacy Concerns: Sensitive or confidential documents may not be suitable for upload to Overleaf. You should always consider data privacy!.\nSubscription Costs: basic Overleaf is free, but more advanced features and collaboration options are costly."
  },
  {
    "objectID": "slides/lec-1.html#latexdiff",
    "href": "slides/lec-1.html#latexdiff",
    "title": "Welcome to MLaRPiS",
    "section": "LaTeXdiff",
    "text": "LaTeXdiff\nLaTeXdiff is a tool (PERL script) used to highlight and track changes between two versions of a LaTeX document.\nIt’s particularly useful for collaborative writing and when reviewing or revising documents.\nHow LaTeXdiff Works\nLaTeXdiff operates by comparing two LaTeX files:\n\nThe original version (e.g., document-v1.tex)\nThe revised version (e.g., document-v2.tex)\n\nLaTeXdiff identifies differences in the text, equations, figures, and more. LaTeXdiff then generates a new LaTeX file highlighting these differences, using color coding, strikethrough and other visual cues."
  },
  {
    "objectID": "slides/lec-1.html#bibliography-management",
    "href": "slides/lec-1.html#bibliography-management",
    "title": "Welcome to MLaRPiS",
    "section": "Bibliography management",
    "text": "Bibliography management\n\nZotero –&gt; Hanne will introduce Zotero as a tool for collecting, organizing, and citing research materials.\nBibTeX –&gt; Gerko will say something about BibTeX in conjunction with LaTeX for citation management."
  },
  {
    "objectID": "slides/lec-1.html#topics-covered-so-far",
    "href": "slides/lec-1.html#topics-covered-so-far",
    "title": "Welcome to MLaRPiS",
    "section": "Topics covered so far",
    "text": "Topics covered so far\n\nThis course\nMarkup languages\nLaTeX\nOverleaf\nLaTeXdiff\nZotero"
  },
  {
    "objectID": "slides/lec-1.html#next-meeting",
    "href": "slides/lec-1.html#next-meeting",
    "title": "Welcome to MLaRPiS",
    "section": "Next meeting",
    "text": "Next meeting\nMarkdown + hand in the exercise in this week’s lab\n\n\n\n\n\n\nGerko Vink and Hanne Oberman - Markup Languages @ UU"
  },
  {
    "objectID": "course-team.html",
    "href": "course-team.html",
    "title": "Teaching team",
    "section": "",
    "text": "I am a statistician masquerading as a dark data scientist with a passion for educating people. I aim to be at the cutting edge of both teaching and research and have an interest in new developments concerning the presentation of data, results and knowledge. I have a specific interest for problems where not all data is available (some information is left in the dark), information privacy, computational evaluation and programming. I am based in the Netherlands and work as an associate professor at Utrecht University (Utrecht, Netherlands).\nI live my life with a wife and two kids, a surfboard and a pair of hiking shoes. You can reach me via e-mail at g.vink@uu.nl\n\n\nHanne Oberman is my (see above) PhD student. Hanne is a key figure in Utrecht’s Open Science Community and has a knack for new developments in creating and maintaining robust software. Hanne is a contributor and developer to multiple R-packages, some of which are in the top 10 packages developed at Utrecht University. Oh, and Hanne is much too polite, which is why I wrote this text on her behalf. You can reach Hanne at h.i.oberman@uu.nl"
  },
  {
    "objectID": "course-team.html#instructors",
    "href": "course-team.html#instructors",
    "title": "Teaching team",
    "section": "",
    "text": "I am a statistician masquerading as a dark data scientist with a passion for educating people. I aim to be at the cutting edge of both teaching and research and have an interest in new developments concerning the presentation of data, results and knowledge. I have a specific interest for problems where not all data is available (some information is left in the dark), information privacy, computational evaluation and programming. I am based in the Netherlands and work as an associate professor at Utrecht University (Utrecht, Netherlands).\nI live my life with a wife and two kids, a surfboard and a pair of hiking shoes. You can reach me via e-mail at g.vink@uu.nl\n\n\nHanne Oberman is my (see above) PhD student. Hanne is a key figure in Utrecht’s Open Science Community and has a knack for new developments in creating and maintaining robust software. Hanne is a contributor and developer to multiple R-packages, some of which are in the top 10 packages developed at Utrecht University. Oh, and Hanne is much too polite, which is why I wrote this text on her behalf. You can reach Hanne at h.i.oberman@uu.nl"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Markup Languages and Reproducible Programming in Statistics",
    "section": "",
    "text": "Week\nDate\nFocus\nLocation\n\n\n\n\n1\n13 Sep\nIntroduction to Markup Languages; and LaTeX\nBOL 1062\n\n\n2\n27 Sep\nMarkdown in (most) Flavors\nBOL 1025\n\n\n3\n01 Nov\nVersion Control and Development Flow\nSGG 128\n\n\n4\n08 Nov\nReproducible Research Repositories\nBOL 1025\n\n\n5\n22 Nov\nDeveloper Portfolio\nBOL 1025\n\n\n6\n06 Dec\nPackages, Code Robustness and Unit Testing\nBOL 1025"
  },
  {
    "objectID": "weeks/week-2.html",
    "href": "weeks/week-2.html",
    "title": "Week 2: Markdown in (most) flavors",
    "section": "",
    "text": "Lecture Week 2\n\n\n\nThis week’s slides can be found here"
  },
  {
    "objectID": "weeks/week-2.html#watch-this-video",
    "href": "weeks/week-2.html#watch-this-video",
    "title": "Week 2: Markdown in (most) flavors",
    "section": "Watch this video",
    "text": "Watch this video\nMine Çetinkaya-Rundel has a great video that highlights many of Quarto’s relevant features in our field."
  },
  {
    "objectID": "weeks/week-2.html#browse-the-quarto-website",
    "href": "weeks/week-2.html#browse-the-quarto-website",
    "title": "Week 2: Markdown in (most) flavors",
    "section": "Browse the Quarto website",
    "text": "Browse the Quarto website\nThe people at Posit have designed this awesome companion website that details pretty much everything Quarto. Have a look around and remember this source when you’re in need of some additional functionality. Much of what you can do with Quarto is detailed here."
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "The course website serves as syllabus. Background information, e.g. about course aims, can be found on Osiris. If you really want to have a PDF version, you can download it here."
  }
]